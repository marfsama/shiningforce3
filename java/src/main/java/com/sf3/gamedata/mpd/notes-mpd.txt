Notes:
* "other" chunks seems to be scoll pane images
* most often the images are 512x128 palette indexed images (bit map format)
* in sara02 the chunks contains 8x8 cells and one chunk (chunk index 2) seems to be pattern name table (see page 83)
* the "value" fields in the header must encode:
  * offset where to place the palettes in color ram
  * character control register (2 x 16 bits) configuring the scroll backgrounds
  * Pattern Name Control Register (page 94), 16 bits for each used background
  * maybe there is a list where the character (texture) data should be placed in VRAM
* rotation scroll screen is used to display ground texture.
  => "surface_tiles" might be the pattern name table for the ground scroll screen.


bochi.mpd (vandal home)
* Background Scroll Screens (other)
 * (0) 512x128 (palette 0)
 * (1) 512x128 (palette 0)
 * (2) unused
 * (3) 512x128 (palette 1)
 * (4) 512x128 (palette 1)

=> character pattern size: 2x2
=> page is strange: seems to be 16x16, but the only valid options are 32x32 and 64x64
=> plane is ??, options are 1x1, 2x1, 2x2
=> map is ?, options are 2x2 (for normal scroll screen) and 4x4 (for rotate screen)
=> color format: 32k colors (16 bits)

/* slColRAMMode */
#define		CRM16_1024		0
#define		CRM16_2048		1
#define		CRM32_1024		2
/* slChar */
#define		COL_TYPE_16		0x00
#define		COL_TYPE_256		0x10
#define		COL_TYPE_2048		0x20
#define		COL_TYPE_32768		0x30
#define		COL_TYPE_1M		0x40
#define		CHAR_SIZE_1x1		0
#define		CHAR_SIZE_2x2		1
/* slPage */
#define		PNB_2WORD		0
#define		PNB_1WORD		0x8000
#define		CN_10BIT       		0
#define		CN_12BIT		0x4000
/* slPlane */
#define		PL_SIZE_1x1		0
#define		PL_SIZE_2x1		1
#define		PL_SIZE_2x2		3
/* slScrDisp */
#define		NBG0ON			(1<<0)
#define		NBG1ON			(1<<1)
#define		NBG2ON			(1<<2)
#define		NBG3ON			(1<<3)
#define		RBG0ON			(1<<4)
#define		LNCLON			(1<<5)
#define		SPRON			(1<<6)
#define		BACKON			(1<<5)
#define		NBG0OFF			(1<<16)
#define		NBG1OFF			(1<<17)
#define		NBG2OFF			(1<<18)
#define		NBG3OFF			(1<<19)
#define		RBG0OFF			(1<<20)
/* BitMap control */
#define		BM_512x256		0x02
#define		BM_512x512		0x06
#define		BM_1024x256		0x0a
#define		BM_1024x512		0x0e




NGB1:
8-bit(256 colors)
Tile(1H x 1V)
Plane Size = 1H x 1V
Pattern Name data size = 1 word
Character Number Supplement bit = 0
Special Priority bit = 0
Special Color Calculation bit = 0
Supplementary Palette number = 0
Supplementary Color number = 8
Plane A Address = 0005A000
Plane B Address = 0005A000
Plane C Address = 0005A000
Plane D Address = 0005A000
Coordinate Increments x = 1,000000, y = 1,000000
Window W0 Enabled:
Line Window Table Address = 05E57C00
Display inside of Window
Window Overlap Logic: OR
Color Ram Address Offset = 0
Priority = 4
Color Calculation Enabled
Extended Color Calculation Enabled
Color Calculation Ratio = 23:9
Color Offset A Enabled
R = 0, G = 0, B = 0
Special Color Calculation 0


NBG2
8-bit(256 colors)
Tile(1H x 1V)
Plane Size = 1H x 1V
Pattern Name data size = 1 word
Character Number Supplement bit = 0
Special Priority bit = 0
Special Color Calculation bit = 0
Supplementary Palette number = 0
Supplementary Color number = 8
Plane A Address = 00058000
Plane B Address = 00058000
Plane C Address = 00058000
Plane D Address = 00058000
Screen Scroll x = 0, y = -508
Window disabled whole screen
Color Ram Address Offset = 0
Priority = 0
Special Color Calculation 3

NBG3
8-bit(256 colors)
Tile(1H x 1V)
Plane Size = 1H x 1V
Pattern Name data size = 1 word
Character Number Supplement bit = 0
Special Priority bit = 0
Special Color Calculation bit = 0
Supplementary Palette number = 0
Supplementary Color number = 8
Plane A Address = 00058000
Plane B Address = 00058000
Plane C Address = 00058000
Plane D Address = 00058000
Screen Scroll x = -511, y = -507
Window disabled whole screen
Color Ram Address Offset = 7000
Priority = 0
Special Color Calculation 3

RBG0
Using Parameter A
Coefficient Table Enabled(Mode 0)
8-bit(256 colors)
Tile(1H x 1V)
Plane Size = 1H x 1V
Pattern Name data size = 1 word
Character Number Supplement bit = 0
Special Priority bit = 0
Special Color Calculation bit = 0
Supplementary Palette number = 0
Supplementary Color number = 0
Plane A Address = 00062000
Plane B Address = 00062000
Plane C Address = 00062000
Plane D Address = 00062000
Plane E Address = 00062000
Plane F Address = 00062000
Plane G Address = 00062000
Plane H Address = 00062000
Plane I Address = 00062000
Plane J Address = 00062000
Plane K Address = 00062000
Plane L Address = 00062000
Plane M Address = 00062000
Plane N Address = 00062000
Plane O Address = 00062000
Plane P Address = 00062000
Window W1 Enabled:
Horizontal start = 0
Vertical start = 8
Horizontal end = 319
Vertical end = 231
Display inside of Window
Window Overlap Logic: OR
Color Ram Address Offset = 0
Priority = 1
Color Calculation Enabled
Extended Color Calculation Enabled
Color Calculation Ratio = 31:1
Color Offset A Enabled
R = 0, G = 0, B = 0
Special Color Calculation 3

General Info:
Border Color Mode = Back screen
Display Resolution = 320 x 240(NTSC)
Interlace Mode = Non-Interlace
Latches HV counter when external latch flag is read
HV is latched
H Counter = 0
V Counter = 0

Line Color Screen Stuff
-----------------------
Mode = Single color
Address = 05E00000

Back Screen Stuff
-----------------
Mode = Single color
Address = 05E59E00
Color Offset A Enabled
R = 0, G = 0, B = 0

Sprite Stuff
------------
Sprite Type = 4
VDP1 Framebuffer Data Format = RGB and palette
Sprite Window Enabled
Window disabled whole screen
Color RAM Offset = 0
Color Calculation Enabled
Extended Color Calculation Enabled
Color Calculation Condition = Priority >= CC Condition Number
Color Calculation Condition Number = 0
Color Calculation Ratio 0 = 31:1
Color Calculation Ratio 1 = 31:1
Color Calculation Ratio 2 = 31:1
Color Calculation Ratio 3 = 31:1
Color Calculation Ratio 4 = 31:1
Color Calculation Ratio 5 = 31:1
Color Calculation Ratio 6 = 31:1
Color Calculation Ratio 7 = 31:1
Priority 0 = 2
Priority 1 = 4
Priority 2 = 1
Priority 3 = 2
Priority 4 = 0
Priority 5 = 0
Priority 6 = 0
Priority 7 = 0
Color Offset A Enabled
R = 0, G = 0, B = 0



cannot decode file hrnaka: java.io.EOFException
cannot decode file hrrail: java.io.EOFException
cannot decode file inka00: java.io.EOFException
cannot decode file jousai: pos < flushedPos!
cannot decode file mgma00: java.io.EOFException
cannot decode file mgma01: java.io.EOFException
cannot decode file muhasi: java.io.EOFException
cannot decode file point: java.io.EOFException
cannot decode file sara05: java.io.EOFException
cannot decode file shief1: java.io.EOFException
cannot decode file shief2: java.io.EOFException
cannot decode file shief3: java.io.EOFException
cannot decode file shief4: java.io.EOFException
cannot decode file shief5: java.io.EOFException
cannot decode file shio00: java.io.EOFException
cannot decode file tnka00: java.io.EOFException
cannot decode file tomt00: java.io.EOFException
cannot decode file toue00: java.io.EOFException
cannot decode file tree00: java.io.EOFException
cannot decode file turi00: java.io.EOFException
cannot decode file turi01: java.io.EOFException
cannot decode file yaka2: java.io.EOFException
cannot decode file yaka3: java.io.EOFException
cannot decode file yaka4: java.io.EOFException
cannot decode file zlv1: java.io.EOFException
cannot decode file zlv2: java.io.EOFException
cannot decode file zlv3: java.io.EOFException
cannot decode file zlv4: java.io.EOFException
cannot decode file zoku00: java.io.EOFException


cannot decode file ship2: pos < flushedPos! 0x3528 (first PDATA @bca0 (points to 25bd40), 0x253488
